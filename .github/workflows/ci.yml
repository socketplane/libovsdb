name: libovsb-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build & Unit Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.16
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
      id: go

    - name: Install benchstat
      run:  go install golang.org/x/perf/cmd/benchstat@latest

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Generate Code
      run: make prebuild

    # This cannot be run in parallel because we require running go-generate first
    # We need to skip the go installation and caching to avoid "File exists" errors in tbe logs
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.40.1
        skip-go-installation: true
        skip-pkg-cache: true
        skip-build-cache: true

    - name: Build
      run: make build

    - name: Test
      run: make test

    - name: Test
      run: make integration-test

    - name: Generate coverage
      run: make coverage

    - name: Upload test coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: profile.cov

    - name: Benchmark
      run: make bench

    - name: Restore Latest Main Benchmark
      id: old-benchmark
      uses: actions/cache@v2
      with:
        path: bench-main.out
        key: benchmark-main-${{ hashfiles('**/*.go') }}
        restore-keys: |
          benchmark-main-

    - name: Compare Benchmarks
      if: hashFiles('bench-main.out') != ''
      run: benchstat bench-main.out bench.out

    - name: Create New Main Benchmark On Cache Miss
      if: steps.old-benchmark.outputs.cache-hit != 'true' && github.ref == 'refs/heads/main'
      run: cp -f bench.out bench-main.out

  test:
    name: Integration Test
    needs: build
    strategy:
      matrix:
        ovs_version:
          - 2.15.0
          - 2.14.0
          - 2.13.0

    runs-on: ubuntu-latest

    steps:
    - name: Set up Go 1.16
      uses: actions/setup-go@v1
      with:
        go-version: 1.16
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Integration Test
      run: make integration-test
      env:
        OVS_IMAGE_TAG: ${{ matrix.ovs_version }}

  images:
    needs: build
    name: Build Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cmd: [modelgen, print_schema, stress]
    
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        if: ${{ contains(github.ref, 'refs/head/main') }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          target: ${{ matrix.cmd }}
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ contains(github.ref, 'refs/head/main') }}
          tags: libovsdb/${{ matrix.cmd }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}